name: Deploy Lambda Function

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt -t ./

    - name: Package Lambda function
      run: zip -r lambda_function.zip ./*

    - name: Check if Lambda function exists and create it if not
      run: |
        FUNCTION_NAME="lambda"
        FUNCTION_EXISTS=$(aws lambda get-function --function-name $FUNCTION_NAME --region us-east-1 --query 'Configuration.FunctionName' --output text || echo "Not Found")

        if [ "$FUNCTION_EXISTS" == "Not Found" ]; then
          echo "Lambda function does not exist. Creating Lambda function..."
          aws lambda create-function \
            --function-name $FUNCTION_NAME \
            --runtime python3.9 \
            --role arn:aws:iam::732498778071:role/demotest-role-dk8nvxma \
            --handler lambda_function.lambda_handler \
            --zip-file fileb://lambda_function.zip \
            --region us-east-1
        else
          echo "Lambda function already exists."
        fi
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: us-east-1

    - name: Deploy Lambda function code with retry
      run: |
        RETRY_COUNT=0
        MAX_RETRIES=5
        SUCCESS=false
        while [[ $RETRY_COUNT -lt $MAX_RETRIES ]]; do
          echo "Attempt $(($RETRY_COUNT + 1)) of $MAX_RETRIES"
          aws lambda update-function-code \
            --function-name lambda \
            --zip-file fileb://lambda_function.zip \
            --region us-east-1 && SUCCESS=true && break
          RETRY_COUNT=$(($RETRY_COUNT + 1))
          echo "Waiting for Lambda function to be ready..."
          sleep $((2 ** $RETRY_COUNT))  # Exponential backoff
        done
        if [ "$SUCCESS" = false ]; then
          echo "Failed to update Lambda function code after $MAX_RETRIES attempts."
          exit 1
        fi
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: us-east-1

    - name: Configure environment variables with retry
      run: |
        RETRY_COUNT=0
        MAX_RETRIES=5
        SUCCESS=false
        while [[ $RETRY_COUNT -lt $MAX_RETRIES ]]; do
          echo "Attempt $(($RETRY_COUNT + 1)) of $MAX_RETRIES"
          aws lambda update-function-configuration \
            --function-name lambda \
            --environment "Variables={HEROKU_API_KEY=value1,HOSTED_ZONE_ID=value2,SENDER_MAIL=value3,RECEIVER_MAIL=receviver_mail,SLACK_URL=value4,HEROKU_APP_NAME=value5,CERTIFICATE_NAME=tyrannosaurs-28703,}" \
            --region us-east-1 && SUCCESS=true && break
          RETRY_COUNT=$(($RETRY_COUNT + 1))
          echo "Waiting for Lambda function to be ready..."
          sleep $((2 ** $RETRY_COUNT))  # Exponential backoff
        done
        if [ "$SUCCESS" = false ]; then
          echo "Failed to update Lambda function configuration after $MAX_RETRIES attempts."
          exit 1
        fi
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: us-east-1

